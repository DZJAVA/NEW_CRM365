package cn.dgg.CRM365.web.resource;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import cn.dgg.CRM365.domain.authority.Department;
import cn.dgg.CRM365.domain.authority.User;
import cn.dgg.CRM365.domain.resourcesManage.Client;
import cn.dgg.CRM365.domain.resourcesManage.Messages;
import cn.dgg.CRM365.util.mvc.MvcUtil;
import cn.dgg.CRM365.util.orm.ICommonDAO;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
/**
 * 短信记录管理控制器
  * <功能简述>
  * <功能详细描述>
  * 
  * @author  王玉川
  * @version  [版本号, Dec 17, 2012]
  * @see  [相关类/方法]
  * @since  [产品/模块版本]
 */
@SuppressWarnings("all")
@RequestMapping("/messages")
@Controller
public class MessagesController {
	@Autowired
	@Qualifier("commonDAOProxy")
	ICommonDAO<Messages> dao;
	
	@RequestMapping("/messages.do")
	public ModelAndView jumpPage(){
		return new ModelAndView("resource/messages");
	}
	
	/**
     * 
     *<功能简述>
     * 查询已发送短信信息
     *<功能详细描述>
     * @param node
     * @param request
     * @return [参数说明]
     * 
     * @return ModelAndView [返回类型说明]
     * @exception throws [异常类型] [异常说明]
     * @see [类、类#方法、类#成员]
     */
		@RequestMapping(value = "/loadMessages.do")
		public ModelAndView testOnClick( HttpServletRequest request ) {
		JSONObject jsonObject = new JSONObject();
		JSONArray data = new JSONArray();
		     try{
			     String hql = "from Messages m";
			     User userSession = (User) request.getSession().getAttribute("userSession");
					StringBuffer wherehql = new StringBuffer(" where 1=1");
					if(userSession.getRole().getRoleCode().equals("201202")){
						wherehql.append(" and m.sender='").append(userSession.getLoginId()).append("'");
					}
					if(userSession.getRole().getRoleCode().equals("201203")){
						wherehql.append(" and m.sender='").append(userSession.getLoginId()).append("'");
					}
			     List<Messages> relatList=dao.findAll(hql+wherehql);
			     for(Messages messages:relatList){
			    	 JSONObject item = new JSONObject();
					 item.element("id", MvcUtil.toJsonString(messages.getId()));
					 item.element("sender", MvcUtil.toJsonString(messages.getSender()));
					 item.element("receivedBy", MvcUtil.toJsonString(messages.getReceivedBy()));
					 item.element("content", MvcUtil.toJsonString(messages.getContent()));
					 item.element("sendtime", MvcUtil.toJsonString(messages.getSendtime()));
					 data.add(item);
			     }
			     jsonObject.element("data", data);
		     }catch (Exception e){
			     e.printStackTrace();
			     }
			     return MvcUtil.jsonObjectModelAndView(jsonObject);
		    }
		
		
		/**
		 * 删除短信记录信息 <功能简述> <功能详细描述>
		 * 
		 * @param id
		 * @return [参数说明]
		 * 
		 * @return ModelAndView [返回类型说明]
		 * @exception throws
		 *                [异常类型] [异常说明]
		 * @see [类、类#方法、类#成员]
		 */
		@RequestMapping("/deleteMessages.do")
		public ModelAndView deleteDepartment(@RequestParam("id")
		String id) {
			JSONObject jsonObject = new JSONObject();
			String[] ids = id.split(",");
			int sum = 0;
			for (String i : ids) {
				try {
					dao.deleteById(Long.parseLong(i), Messages.class);
					sum++;
				} catch (Exception e) {
					e.printStackTrace();
					continue;
				}
			}
			if (sum > 0) {
				jsonObject.element("success", true);
				jsonObject.element("msg", "删除成功，删除了" + sum + "条数据!!!");
			} else {
				jsonObject.element("failure", false);
				jsonObject.element("msg", "删除短信出错");

			}
			return MvcUtil.jsonObjectModelAndView(jsonObject);
		}

}
