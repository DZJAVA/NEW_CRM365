<%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%>
<%@ include file="/WEB-INF/views/common/header.jsp"%>
<script type="text/javascript">
		Ext.onReady(function(){
			Ext.QuickTips.init();// 浮动信息提示
    		Ext.BLANK_IMAGE_URL = '<%=path%>/resources/images/default/s.gif';// 替换图片文件地址为本地
    	var _assigns = '';
		var _ends = '';
		var _times = '';
	    // --------------- grid store -------------------
	    var clientStore = new Ext.data.JsonStore({
	        url: '<%=path%>/statements/loadNewClient.do',
	        root: 'data',
	        totalProperty: 'totalCount',
	        idProperty: 'id',
	        autoDestroy: true,
	        baseParams: {
	        	conditions: ''
	        },
	        fields: [
	            { name: 'signPossible' },
	            { name: 'count'}
	        ]
	    });
	    
	    var showMsgStore = new Ext.data.JsonStore({
	        url: '<%=path%>/statements/loadShowClientMsg.do',
	        root: 'data',
	        totalProperty: 'totalCount',
	        idProperty: 'id',
	        autoDestroy: true,
	        baseParams: {
	        	conditions: ''
	        },
	        fields: [
	        	{ name: 'id'},
	            { name: 'assignDate'},
	            { name: 'clientName'},
	            { name: 'showOppType'},
	            { name: 'loanAmount'},
	            { name: 'clientStatus'},
	            { name: 'signPossible'},
	            { name: 'assignTime'},
	            { name: 'remark'}
	        ]
	    });
	    
	    var myGridLoadAction = new Ext.Action({
	        text: '刷新',
	        iconCls:'btn_del',
	        scale:'small',
	        disabled: true,
	        handler: function(aMasterId){
	            clientStore.setBaseParam('masterId', aMasterId);
	            clientStore.load({
	                params:{
	                    start:0, 
	                    limit:20
	                },
	                waitTitle:'提示',waitMsg: '数据加载请稍后...',
	                failure: function() {
	                    Ext.Msg.alert('提示', '读取数据失败！');                             
	                }
	            });
	        }
	    }); 
	    
	    //---------------下拉列表--------------------------
	    var timeData = new Ext.data.SimpleStore({
		      fields:['key', 'value'],
		      data:[
	      		[ '1', '本周'],
			    [ '2', '本月'],
			    [ '3', '本年']
		      ]
		});
		var timeCombox = new Ext.form.ComboBox({
		      id : 'timeCombox',
		      store : timeData,
		      width: 120,
		      editable: false,
		      allowBlank: true,
		      displayField : 'value', 
		      valueField : 'key', 
		      mode : 'local', 
		      triggerAction : 'all', 
		      emptyText : '请选择...'// 默认值   selectOnFocus : true,
	    });
	    
	    var searchButton = {
	    	xtype:'button',
			iconCls: 'check',
			text:'查 询',
			handler:function(){
				var _time = Ext.getCmp('timeCombox').getValue();
				var _assign = Ext.getCmp('assignDate').getValue();
				var _endAssignDate = Ext.getCmp('endAssignDate').getValue();
				if(_assign != ''){
					_assign = _assign.format('Y-m-d');
				}
				if(_endAssignDate != ''){
					_endAssignDate = _endAssignDate.format('Y-m-d');
				}
				if(_time == '1' | _time == '本周'){
					_time = '1';
				}else if(_time == '2' | _time == '本月'){
					_time = '2';
				}else if(_time == '3' | _time == '本年'){
					_time = '3';
				}
				if(_time != '' & (_assign != '' | _endAssignDate != '')){
					Ext.MessageBox.alert('提示', '分配日期和时间不能同时填写！');
				}else{
					if(_assign != '' & _endAssignDate != ''){
						var start = Ext.getCmp('assignDate').getValue().format('Ymd');
						var end = Ext.getCmp('endAssignDate').getValue().format('Ymd');
						if(start > end){
							Ext.MessageBox.alert('提示', '结束时间必须大于开始时间');
						}else{
							_assigns = _assign;
							_ends = _endAssignDate;
							_times = _time;
							Ext.apply(clientStore.baseParams,{
								conditions:'{_assign:"'+_assign+'",_endAssignDate:"'+_endAssignDate+'",_time:"'+_time+'"}'
							});
							clientStore.load({
					            params:{
					                start:0, 
					                limit:20
					            },
					            waitTitle:'提示',waitMsg: '数据加载请稍后...',
					            failure: function() {
					                Ext.Msg.alert('提示', '读取数据失败！');                             
					            }
						    });
						}
					}else{
						_assigns = _assign;
						_ends = _endAssignDate;
						_times = _time;
						Ext.apply(clientStore.baseParams,{
							conditions:'{_assign:"'+_assign+'",_endAssignDate:"'+_endAssignDate+'",_time:"'+_time+'"}'
						});
						clientStore.load({
				            params:{
				                start:0, 
				                limit:20
				            },
				            waitTitle:'提示',waitMsg: '数据加载请稍后...',
				            failure: function() {
				                Ext.Msg.alert('提示', '读取数据失败！');                             
				            }
					    });
					}
				}
				Ext.getCmp('timeCombox').setValue('');
				Ext.getCmp('assignDate').setValue('');
				Ext.getCmp('endAssignDate').setValue('');
			}
	    }
	    var oneTbar=new Ext.Toolbar({
			items:[
				'分配日期：',
				{
		     	 	xtype:'datefield',
		     	 	width:120,
		     	 	format:'Y-m-d',
		     	 	editable: true,
		     	 	id:'assignDate'
		     	},
		     	'&nbsp至&nbsp',
		     	{
		     		xtype:'datefield',
		     	 	width:120,
		     	 	format:'Y-m-d',
		     	 	editable: true,
		     	 	id:'endAssignDate'
		     	},
		     	'时间：',
		     	timeCombox,
				searchButton
			] 
		}); 
		//----------------------showGrid-------------------
	    var showGrid = new Ext.grid.GridPanel({
	        id: 'showGrid',
	        store: showMsgStore,
	        width: '100%',
	        sm: new Ext.grid.RowSelectionModel(),
	        frame:true,
	        trackMouseOver: false,
	        disableSelection: false,
	        loadMask: true,
	        columns: [
	        	{
	            	header: '录入日期',
	                sortable: true,
	                dataIndex: 'assignDate'                                                  
	            },
	            {
	            	header: '客户名称',
	                sortable: true,
	                dataIndex: 'clientName'
	            },
	            {
	            	header: '商机类型',
	                sortable: true,
	                dataIndex: 'showOppType'
	            },
	            {
	            	header: '贷款金额',
	                sortable: true,
	                dataIndex: 'loanAmount'
	            },
	            {
	            	header: '客户状态',
	                sortable: true,
	                dataIndex: 'clientStatus'
	            },
	            {
	            	header: '签单可能性',
	                sortable: true,
	                dataIndex: 'signPossible'
	            },
	            {
	            	header: '分配时间',
	                sortable: true,
	                dataIndex: 'assignTime'
	            },
	            {
	            	header: '备注',
	            	sortable: true,
	            	dataIndex: 'remark'
	            }
	        ],
	        bbar: new Ext.PagingToolbar({
	            pageSize: 20,
	            store: showMsgStore,
	            displayInfo: true,
	            displayMsg: '显示: {0} - {1} / 总数: {2}',
	            emptyMsg: '没有记录'
	        })
	    });
	    
	    var barPan = new Ext.Panel({
	    	frame:true,
			width: '100%',
			items: oneTbar
	    });
	    var pan = new Ext.Panel({
			iconCls: 'chart',
			frame:true,
			width: '100%',
			height: 450,
		    items: [{
		        xtype: 'linechart',
		        store: clientStore,
		        url: '<%=path%>/resources/charts.swf',
		        xField: 'signPossible',
		        xAxis: new Ext.chart.CategoryAxis({
	                title: '签单可能性'
	            }),
	            yAxis: new Ext.chart.NumericAxis({
	                title: '客户资源量'
	            }),
		        chartStyle: {
		            padding: 10,
		            animationEnabled: true,//柱状图 弹性显示
		            font: {
		                name: 'Tahoma',
		                color: 0x444444,
		                size: 11
		            },
		            dataTip: {
		                padding: 5,
		                border: {
		                    color: 0x99bbe8,
		                    size: 1
		                },
		                background: {
		                    color: 0xDAE7F6,
		                    alpha: .9
		                },
		                font: {
		                    name: 'Tahoma',
		                    color: 0x15428B,
		                    size: 10,
		                    bold: true
		                }
		            },
		            xAxis: {
		                color: 0x69aBc8,
		                majorTicks: {
		                    color: 0x69aBc8,
		                    length: 4
		                },
		                minorTicks: {
		                    color: 0x69aBc8,
		                    length: 2
		                },
		                majorGridLines: {
		                    size: 1,
		                    color: 0xeeeeee
		                }
		            },
		            yAxis: {
		                color: 0x69aBc8,
		                majorTicks: {
		                    color: 0x69aBc8,
		                    length: 4
		                },
		                minorTicks: {
		                    color: 0x69aBc8,
		                    length: 2
		                },
		                majorGridLines: {
		                    size: 1,
		                    color: 0xdfe8f6
		                }
		            }
		        },
		        series: [
					{
			            type: 'column',
			            displayName: '计数：',
			            yField: 'count',
			            style: {
			            	marginBottom: '10px',
			                color: '#A9DBF6'
			            }
			       	}
				],
				listeners: {
					'itemClick': function(e){
						var record = clientStore.getAt(e.index);
						var signPoss = record.get('signPossible');
						if(_times == '1' | _times == '本周'){
							_times = '1';
						}else if(_times == '2' | _times == '本月'){
							_times = '2';
						}else if(_times == '3' | _times == '本年'){
							_times = '3';
						}
						if(signPoss == '100%'){
							signPoss = 1;
						}else if(signPoss == '80%'){
							signPoss = 2;
						}else if(signPoss == '50%'){
							signPoss = 3;
						}else{
							signPoss = 4;
						}
						Ext.apply(showMsgStore.baseParams,{
							conditions:'{_assigns:"'+_assigns+'",signPoss:"'+signPoss+'",_ends:"'+_ends+'",_times:"'+_times+'"}'
						});
						showMsgStore.load({
				            params:{
				                start:0, 
				                limit:20
				            },
				            waitTitle:'提示',waitMsg: '数据加载请稍后...',
				            failure: function() {
				                Ext.Msg.alert('提示', '读取数据失败！');                             
				            }
					    });
						_window.show();
					}
				}
		    	}
			]
		});
	    
	    var mainPanel = new Ext.form.FormPanel({
			layout:'form',
			border:false,
			frame:true,
			autoScroll:true,
			items:[
				oneTbar,
				pan
	        ]
		});
		var returnAction = new Ext.Action({
			text: '返回',
			iconCls: 'returns',
			handler: function(){
				_window.hide();			
			}
		});
	    var _window = new Ext.Window({
	    	title: '详细客户信息',
	        width: 850,
	        height: 450,
	        modal: true,
	        layout: 'fit',
	        plain: true,
	        bodyStyle: 'padding:5px;',
	        buttonAlign: 'center',
	        closable: false,
	        closeAction: 'hide',
	        items: showGrid,
	        buttons: [
	            returnAction
	        ]
	    });
	    // --------------- viewport ------------------
	    var viewport = new Ext.Viewport({
	        layout: 'fit',
	        border: false,
	        items: [
	           mainPanel
	        ]
	    });
	    // --------------- load data -------------------
	    myGridLoadAction.execute();
		});
		</script>
<%@ include file="/WEB-INF/views/common/footer.jsp"%>
